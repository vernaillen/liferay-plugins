/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.samplealloymvc.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.liferay.samplealloymvc.model.SAMTodoItem;
import com.liferay.samplealloymvc.model.SAMTodoItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SAMTodoItem service. Represents a row in the &quot;SAM_SAMTodoItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SAMTodoItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SAMTodoItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SAMTodoItemImpl
 * @see SAMTodoItem
 * @see SAMTodoItemModel
 * @generated
 */
@ProviderType
public class SAMTodoItemModelImpl extends BaseModelImpl<SAMTodoItem>
	implements SAMTodoItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s a m todo item model instance should use the {@link SAMTodoItem} interface instead.
	 */
	public static final String TABLE_NAME = "SAM_SAMTodoItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "samTodoItemId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "samTodoListId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "priority", Types.INTEGER },
			{ "status", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("samTodoItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("samTodoListId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("priority", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table SAM_SAMTodoItem (samTodoItemId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,samTodoListId LONG,description VARCHAR(75) null,priority INTEGER,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SAM_SAMTodoItem";
	public static final String ORDER_BY_JPQL = " ORDER BY samTodoItem.samTodoItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SAM_SAMTodoItem.samTodoItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.samplealloymvc.model.SAMTodoItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.samplealloymvc.model.SAMTodoItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.samplealloymvc.model.SAMTodoItem"));

	public SAMTodoItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _samTodoItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSamTodoItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _samTodoItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SAMTodoItem.class;
	}

	@Override
	public String getModelClassName() {
		return SAMTodoItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("samTodoItemId", getSamTodoItemId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("samTodoListId", getSamTodoListId());
		attributes.put("description", getDescription());
		attributes.put("priority", getPriority());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long samTodoItemId = (Long)attributes.get("samTodoItemId");

		if (samTodoItemId != null) {
			setSamTodoItemId(samTodoItemId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long samTodoListId = (Long)attributes.get("samTodoListId");

		if (samTodoListId != null) {
			setSamTodoListId(samTodoListId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer priority = (Integer)attributes.get("priority");

		if (priority != null) {
			setPriority(priority);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public long getSamTodoItemId() {
		return _samTodoItemId;
	}

	@Override
	public void setSamTodoItemId(long samTodoItemId) {
		_samTodoItemId = samTodoItemId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSamTodoListId() {
		return _samTodoListId;
	}

	@Override
	public void setSamTodoListId(long samTodoListId) {
		_samTodoListId = samTodoListId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public int getPriority() {
		return _priority;
	}

	@Override
	public void setPriority(int priority) {
		_priority = priority;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SAMTodoItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SAMTodoItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SAMTodoItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SAMTodoItemImpl samTodoItemImpl = new SAMTodoItemImpl();

		samTodoItemImpl.setSamTodoItemId(getSamTodoItemId());
		samTodoItemImpl.setCompanyId(getCompanyId());
		samTodoItemImpl.setUserId(getUserId());
		samTodoItemImpl.setUserName(getUserName());
		samTodoItemImpl.setCreateDate(getCreateDate());
		samTodoItemImpl.setModifiedDate(getModifiedDate());
		samTodoItemImpl.setSamTodoListId(getSamTodoListId());
		samTodoItemImpl.setDescription(getDescription());
		samTodoItemImpl.setPriority(getPriority());
		samTodoItemImpl.setStatus(getStatus());

		samTodoItemImpl.resetOriginalValues();

		return samTodoItemImpl;
	}

	@Override
	public int compareTo(SAMTodoItem samTodoItem) {
		long primaryKey = samTodoItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SAMTodoItem)) {
			return false;
		}

		SAMTodoItem samTodoItem = (SAMTodoItem)obj;

		long primaryKey = samTodoItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SAMTodoItemModelImpl samTodoItemModelImpl = this;

		samTodoItemModelImpl._setModifiedDate = false;
	}

	@Override
	public CacheModel<SAMTodoItem> toCacheModel() {
		SAMTodoItemCacheModel samTodoItemCacheModel = new SAMTodoItemCacheModel();

		samTodoItemCacheModel.samTodoItemId = getSamTodoItemId();

		samTodoItemCacheModel.companyId = getCompanyId();

		samTodoItemCacheModel.userId = getUserId();

		samTodoItemCacheModel.userName = getUserName();

		String userName = samTodoItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			samTodoItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			samTodoItemCacheModel.createDate = createDate.getTime();
		}
		else {
			samTodoItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			samTodoItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			samTodoItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		samTodoItemCacheModel.samTodoListId = getSamTodoListId();

		samTodoItemCacheModel.description = getDescription();

		String description = samTodoItemCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			samTodoItemCacheModel.description = null;
		}

		samTodoItemCacheModel.priority = getPriority();

		samTodoItemCacheModel.status = getStatus();

		return samTodoItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{samTodoItemId=");
		sb.append(getSamTodoItemId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", samTodoListId=");
		sb.append(getSamTodoListId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", priority=");
		sb.append(getPriority());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.liferay.samplealloymvc.model.SAMTodoItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>samTodoItemId</column-name><column-value><![CDATA[");
		sb.append(getSamTodoItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>samTodoListId</column-name><column-value><![CDATA[");
		sb.append(getSamTodoListId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priority</column-name><column-value><![CDATA[");
		sb.append(getPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SAMTodoItem.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SAMTodoItem.class
		};
	private long _samTodoItemId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _samTodoListId;
	private String _description;
	private int _priority;
	private int _status;
	private SAMTodoItem _escapedModel;
}